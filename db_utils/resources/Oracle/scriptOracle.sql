------------------------------------------------------------------------------
-- 1) Création de la table OWNER
------------------------------------------------------------------------------
CREATE TABLE OWNER (
    owner_id           NUMBER GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    owner_name         VARCHAR2(100) NOT NULL,
    contact_info       VARCHAR2(150),
    CONSTRAINT PK_OWNER PRIMARY KEY(owner_id)
);

------------------------------------------------------------------------------
-- 2) Création de la table PROPERTY
------------------------------------------------------------------------------
CREATE TABLE PROPERTY (
    property_id           NUMBER GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    owner_id              NUMBER NOT NULL,
    address               VARCHAR2(200),
    property_type         VARCHAR2(50),
    number_of_rooms       NUMBER,
    total_living_area     NUMBER,
    lot_size              NUMBER,
    property_condition    VARCHAR2(50),
    listing_price         NUMBER,
    rental_or_sale        VARCHAR2(10),  -- 'rental' or 'sale'
    availability_date     DATE,
    exclusivity_tier      VARCHAR2(50),
    city_category         VARCHAR2(100),
    neighborhood_category VARCHAR2(100),
    CONSTRAINT PK_PROPERTY PRIMARY KEY (property_id),
    CONSTRAINT FK_PROPERTY_OWNER FOREIGN KEY (owner_id)
        REFERENCES OWNER(owner_id)
);

------------------------------------------------------------------------------
-- 3) Création de la table ANCILLARY_FACILITY
------------------------------------------------------------------------------
CREATE TABLE ANCILLARY_FACILITY (
    facility_id   NUMBER GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    property_id   NUMBER NOT NULL,
    facility_type VARCHAR2(100),
    description   VARCHAR2(200),
    CONSTRAINT PK_ANCILLARY_FACILITY PRIMARY KEY(facility_id),
    CONSTRAINT FK_FACILITY_PROPERTY FOREIGN KEY(property_id)
        REFERENCES PROPERTY(property_id)
);

------------------------------------------------------------------------------
-- 4) Création de la table CLIENT
------------------------------------------------------------------------------
CREATE TABLE CLIENT (
    client_id     NUMBER GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    client_name   VARCHAR2(100) NOT NULL,
    contact_info  VARCHAR2(150),
    CONSTRAINT PK_CLIENT PRIMARY KEY (client_id)
);

------------------------------------------------------------------------------
-- 5) Création de la table TOUR
------------------------------------------------------------------------------
CREATE TABLE TOUR (
    tour_id    NUMBER GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    property_id NUMBER NOT NULL,
    client_id  NUMBER NOT NULL,
    tour_date  DATE,
    comments   VARCHAR2(200),
    CONSTRAINT PK_TOUR PRIMARY KEY (tour_id),
    CONSTRAINT FK_TOUR_PROPERTY FOREIGN KEY(property_id)
        REFERENCES PROPERTY(property_id),
    CONSTRAINT FK_TOUR_CLIENT FOREIGN KEY(client_id)
        REFERENCES CLIENT(client_id)
);

CREATE TABLE TOUR_LOG (
    log_id     NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    tour_id    NUMBER,
    log_date   DATE,
    message    VARCHAR2(200)
);


------------------------------------------------------------------------------
-- 6) Création de la table TRANSACTION
------------------------------------------------------------------------------
CREATE TABLE LUX_TRANSACTION (
    transaction_id     NUMBER GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    property_id        NUMBER NOT NULL,
    transaction_date   DATE NOT NULL,
    transaction_amount NUMBER NOT NULL,
    commission_amount  NUMBER,
    fiscal_period      VARCHAR2(20),
    CONSTRAINT PK_TRANSACTION PRIMARY KEY (transaction_id),
    CONSTRAINT FK_TRANSACTION_PROPERTY FOREIGN KEY(property_id)
        REFERENCES PROPERTY(property_id)
);
